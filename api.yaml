openapi: "3.0.1"
info:
  description: "API server boilerplate."
  version: "1.0.0"
  title: "Boilerplate"
  contact:
    email: "marcos.junior@groove.tech"
servers:
  - url: "https://localhost:3000/"
  - url: "https://aws.url.com"
x-amazon-apigateway-request-validators:
  bodyOnly:
    validateRequestBody: true
    validateRequestParameters: false
paths:
  /ping:
    post:
      summary: "This a example endpoint to this boilerplate"
      operationId: "ping"
      x-amazon-apigateway-request-validator: "bodyOnly"
      requestBody:
        description: "This endpoint needs ping at body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ping"
      responses:
        "201":
          description: "Successful operation, return pong"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "405":
          description: "Invalid input"
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Ping.Arn}/invocations
        connectionType: "INTERNET"
        credentials:
          Fn::Sub: ${ApiRole.Arn}
      security:
        - lambdaTokenAuth: []
components:
  schemas:
    Ping:
      type: "string"
      description: "Should return pong when is success"
    ApiResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"
    BadRequestResponse:
      type: "object"
      properties:
        message:
          type: "string"
  securitySchemes:
    lambdaTokenAuth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
