on:
  pull_request:
    branches:
      - develop
      - release
      - main

name: Plan microservice deploy to AWS

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: 'Checkout code'
      uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: 'Install nodejs'
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: 'Install dependencies'
      run: npm ci

    - name: 'Generate client libraries'
      run: npm run openapi-gen

    - name: 'Run tests'
      run: npm test

    - name: 'Transpile typescript files'
      run: npm run build

    - name: 'Calculate env prefix by branch'
      run: |
        echo "BRANCH_NAME=${GITHUB_BASE_REF_SLUG^^}_" >> $GITHUB_ENV

    - name: 'Set terragrunt environment'
      run: |
        echo "AWS_ACCOUNT_ID=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_ACCOUNT_ID')] }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_ACCESS_KEY_ID')] }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_SECRET_ACCESS_KEY')] }}" >> $GITHUB_ENV
        echo "ENV_NAME=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'ENV_NAME')] }}" >> $GITHUB_ENV

        echo "DB_HOST=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'DB_HOST')] }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'DB_PORT')] }}" >> $GITHUB_ENV
        echo "DB_ROOT_USERNAME=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'DB_ROOT_USERNAME')] }}" >> $GITHUB_ENV
        echo "DB_ROOT_PASSWORD=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'DB_ROOT_PASSWORD')] }}" >> $GITHUB_ENV

        echo "DB_PASSWORD=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'DB_PASSWORD')] }}" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'JWT_SECRET')] }}" >> $GITHUB_ENV
        echo "AIRPORT_API_BASE=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AIRPORT_API_BASE')] }}" >> $GITHUB_ENV
        echo "AIRPORT_API_KEY=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AIRPORT_API_KEY')] }}" >> $GITHUB_ENV

    - name: 'Plan infrastructure'
      uses: the-commons-project/terragrunt-github-actions@master
      with:
        tf_actions_version: latest
        tg_actions_version: latest
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: iac
        tf_actions_comment: true
        args: '--terragrunt-non-interactive'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
