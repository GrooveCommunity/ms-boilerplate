on:
  push:
    branches:
      - develop
      - release
      - main

name: Deploy microservice to AWS

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: 'Checkout code'
      uses: actions/checkout@v2

    - name: 'Install SAM'
      uses: aws-actions/setup-sam@v1

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: 'Install nodejs'
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: 'Install dependencies'
      run: npm ci

    - name: 'Generate client libraries'
      run: npm run openapi-gen

    - name: 'Transpile typescript files'
      run: npm run build

    - name: 'Calculate env prefix by branch'
      run: |
        echo "BRANCH_NAME=${GITHUB_BASE_REF_SLUG^^}_" >> $GITHUB_ENV

    - name: 'Set terragrunt environment'
      run: |
        echo "AWS_ACCOUNT_ID=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_ACCOUNT_ID')] }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_ACCESS_KEY_ID')] }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'AWS_SECRET_ACCESS_KEY')] }}" >> $GITHUB_ENV

        echo "ENV_NAME=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'ENV_NAME')] }}" >> $GITHUB_ENV

        echo "JWT_SECRET=${{ secrets[format('{0}{1}', env.BRANCH_NAME, 'JWT_SECRET')] }}" >> $GITHUB_ENV

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: 'Apply infrastructure'
      uses: the-commons-project/terragrunt-github-actions@master
      with:
        tf_actions_version: latest
        tg_actions_version: latest
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: iac
        tf_actions_comment: false
        args: '--terragrunt-non-interactive'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Deploy SAM stack'
      run: |
        sam deploy --stack-name crew-$ENV_NAME \
          --s3-bucket ${{ env.AWS_ACCOUNT_ID }}-neojets-$ENV_NAME-crew-sam-stack \
          --parameter-overrides "$(cat sam-params)" \
          --capabilities "CAPABILITY_NAMED_IAM" \
          -t template.yaml
